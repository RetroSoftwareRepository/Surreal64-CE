; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\zutil.c
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BA@MOKMMFOD@need?5dictionary?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@FNAOCBOG@stream?5end?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@KIJFAKBJ@file?5error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@MKKNPMJD@stream?5error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@HAHMBNLP@data?5error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGGJBMCE@insufficient?5memory?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@DFPGLBGC@buffer?5error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJFPCCEG@incompatible?5version?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05DOIEBMOI@1?41?44?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT @zlibVersion@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @zError@4
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @zcalloc@12
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT @zcfree@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_z_errmsg
PUBLIC	??_C@_0BA@MOKMMFOD@need?5dictionary?$AA@	; `string'
PUBLIC	??_C@_0L@FNAOCBOG@stream?5end?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0L@KIJFAKBJ@file?5error?$AA@		; `string'
PUBLIC	??_C@_0N@MKKNPMJD@stream?5error?$AA@		; `string'
PUBLIC	??_C@_0L@HAHMBNLP@data?5error?$AA@		; `string'
PUBLIC	??_C@_0BE@OGGJBMCE@insufficient?5memory?$AA@	; `string'
PUBLIC	??_C@_0N@DFPGLBGC@buffer?5error?$AA@		; `string'
PUBLIC	??_C@_0BF@CJFPCCEG@incompatible?5version?$AA@	; `string'
;	COMDAT ??_C@_0BA@MOKMMFOD@need?5dictionary?$AA@
CONST	SEGMENT
??_C@_0BA@MOKMMFOD@need?5dictionary?$AA@ DB 'need dictionary', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FNAOCBOG@stream?5end?$AA@
CONST	SEGMENT
??_C@_0L@FNAOCBOG@stream?5end?$AA@ DB 'stream end', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KIJFAKBJ@file?5error?$AA@
CONST	SEGMENT
??_C@_0L@KIJFAKBJ@file?5error?$AA@ DB 'file error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MKKNPMJD@stream?5error?$AA@
CONST	SEGMENT
??_C@_0N@MKKNPMJD@stream?5error?$AA@ DB 'stream error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HAHMBNLP@data?5error?$AA@
CONST	SEGMENT
??_C@_0L@HAHMBNLP@data?5error?$AA@ DB 'data error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGGJBMCE@insufficient?5memory?$AA@
CONST	SEGMENT
??_C@_0BE@OGGJBMCE@insufficient?5memory?$AA@ DB 'insufficient memory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DFPGLBGC@buffer?5error?$AA@
CONST	SEGMENT
??_C@_0N@DFPGLBGC@buffer?5error?$AA@ DB 'buffer error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJFPCCEG@incompatible?5version?$AA@
CONST	SEGMENT
??_C@_0BF@CJFPCCEG@incompatible?5version?$AA@ DB 'incompatible version', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_z_errmsg DD	FLAT:??_C@_0BA@MOKMMFOD@need?5dictionary?$AA@
	DD	FLAT:??_C@_0L@FNAOCBOG@stream?5end?$AA@
	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
	DD	FLAT:??_C@_0L@KIJFAKBJ@file?5error?$AA@
	DD	FLAT:??_C@_0N@MKKNPMJD@stream?5error?$AA@
	DD	FLAT:??_C@_0L@HAHMBNLP@data?5error?$AA@
	DD	FLAT:??_C@_0BE@OGGJBMCE@insufficient?5memory?$AA@
	DD	FLAT:??_C@_0N@DFPGLBGC@buffer?5error?$AA@
	DD	FLAT:??_C@_0BF@CJFPCCEG@incompatible?5version?$AA@
	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
_DATA	ENDS
PUBLIC	??_C@_05DOIEBMOI@1?41?44?$AA@			; `string'
PUBLIC	@zlibVersion@0
;	COMDAT ??_C@_05DOIEBMOI@1?41?44?$AA@
; File c:\documents and settings\weinerschnitzel\my documents\xbox\surreal64ce sf\trunk\b5.6\1964x11\xbox\zlib\zutil.c
CONST	SEGMENT
??_C@_05DOIEBMOI@1?41?44?$AA@ DB '1.1.4', 00H		; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT @zlibVersion@0
_TEXT	SEGMENT
@zlibVersion@0 PROC NEAR				; COMDAT

; 31   :     return ZLIB_VERSION;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:??_C@_05DOIEBMOI@1?41?44?$AA@

; 32   : }

  00005	c3		 ret	 0
@zlibVersion@0 ENDP
_TEXT	ENDS
PUBLIC	@zError@4
; Function compile flags: /Ogty
;	COMDAT @zError@4
_TEXT	SEGMENT
@zError@4 PROC NEAR					; COMDAT
; _err$ = ecx

; 55   :     return ERR_MSG(err);

  00000	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00007	b9 08 00 00 00	 mov	 ecx, OFFSET FLAT:_z_errmsg+8
  0000c	2b c8		 sub	 ecx, eax
  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]

; 56   : }

  00010	c3		 ret	 0
@zError@4 ENDP
_TEXT	ENDS
PUBLIC	@zcalloc@12
EXTRN	_calloc:NEAR
; Function compile flags: /Ogty
;	COMDAT @zcalloc@12
_TEXT	SEGMENT
_size$ = 8						; size = 4
@zcalloc@12 PROC NEAR					; COMDAT
; _opaque$ = ecx
; _items$ = edx

; 213  :     if (opaque) items += size - size; /* make compiler happy */
; 214  :     return (voidpf)calloc(items, size);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _size$[esp-4]
  00004	50		 push	 eax
  00005	52		 push	 edx
  00006	e8 00 00 00 00	 call	 _calloc
  0000b	83 c4 08	 add	 esp, 8

; 215  : }

  0000e	c2 04 00	 ret	 4
@zcalloc@12 ENDP
_TEXT	ENDS
PUBLIC	@zcfree@8
EXTRN	_free:NEAR
; Function compile flags: /Ogty
;	COMDAT @zcfree@8
_TEXT	SEGMENT
@zcfree@8 PROC NEAR					; COMDAT
; _opaque$ = ecx
; _ptr$ = edx

; 221  :     free(ptr);

  00000	52		 push	 edx
  00001	e8 00 00 00 00	 call	 _free
  00006	59		 pop	 ecx

; 222  :     if (opaque) return; /* make compiler happy */
; 223  : }

  00007	c3		 ret	 0
@zcfree@8 ENDP
_TEXT	ENDS
END
